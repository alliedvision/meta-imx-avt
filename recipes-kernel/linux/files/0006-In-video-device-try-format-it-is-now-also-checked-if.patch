From 8b229c7a5ef0cb5e770629908d930f750b9602f6 Mon Sep 17 00:00:00 2001
From: Dennis Langenkamp <dennis.langenkamp@alliedvision.com>
Date: Mon, 14 Nov 2022 08:29:47 +0100
Subject: [PATCH 06/23] In video device try format it is now also checked if
 the corresponding mbus format is supported by the subdevices.

---
 drivers/staging/media/imx/imx8-isi-cap.c      | 42 ++++++++++++++-----
 .../staging/media/imx/imx8-mipi-csi2-sam.c    | 20 ++++++---
 2 files changed, 46 insertions(+), 16 deletions(-)

diff --git a/drivers/staging/media/imx/imx8-isi-cap.c b/drivers/staging/media/imx/imx8-isi-cap.c
index 2a02ce9f80b9..9571f60090f5 100644
--- a/drivers/staging/media/imx/imx8-isi-cap.c
+++ b/drivers/staging/media/imx/imx8-isi-cap.c
@@ -859,9 +859,13 @@ static int mxc_isi_cap_try_fmt_mplane(struct file *file, void *fh,
 {
 	struct mxc_isi_cap_dev *isi_cap = video_drvdata(file);
 	struct v4l2_pix_format_mplane *pix = &f->fmt.pix_mp;
+    struct v4l2_subdev_format src_fmt;
+    struct media_pad *source_pad;
+    struct v4l2_subdev *src_sd;
 	struct mxc_isi_fmt *fmt;
 	int bpl;
 	int i;
+    int ret;
 
 	dev_dbg(&isi_cap->pdev->dev, "%s\n", __func__);
 
@@ -876,16 +880,34 @@ static int mxc_isi_cap_try_fmt_mplane(struct file *file, void *fh,
 		v4l2_warn(&isi_cap->sd, "Not match format, set default\n");
 	}
 
-	/*
-	 * The bit width in CHNL_IMG_CFG[HEIGHT/WIDTH] is 13, so the maximum
-	 * theorical value for image width/height should be 8K, but due to ISI
-	 * line buffer size limitation, the maximum value is 4K
-	 *
-	 * For efficient data transmission, the minimum data width should be
-	 * 16(128/8)
-	 */
-	v4l_bound_align_image(&pix->width, 16, ISI_4K, fmt->align,
-			      &pix->height, 16, ISI_4K, 1, 0);
+
+    source_pad = mxc_isi_get_remote_source_pad(&isi_cap->sd);
+    if (!source_pad) {
+        v4l2_err(&isi_cap->sd,
+                 "%s, No remote pad found!\n", __func__);
+        return -EINVAL;
+    }
+
+    src_sd = mxc_get_remote_subdev(&isi_cap->sd, __func__);
+    if (!src_sd)
+        return -EINVAL;
+
+    src_fmt.pad = source_pad->index;
+    src_fmt.which = V4L2_SUBDEV_FORMAT_TRY;
+    src_fmt.format.code = fmt->mbus_code;
+    src_fmt.format.width = pix->width;
+    src_fmt.format.height = pix->height;
+    ret = v4l2_subdev_call(src_sd, pad, set_fmt, NULL, &src_fmt);
+    if (ret < 0 && ret != -ENOIOCTLCMD)
+    {
+        v4l2_err(&isi_cap->sd, "try remote fmt fail!\n");
+        return ret;
+    }
+
+    if (pix->width > ISI_4K)
+		pix->width = ISI_4K;
+	if (pix->height > ISI_8K)
+		pix->height = ISI_8K;
 
 	pix->num_planes = fmt->memplanes;
 	pix->pixelformat = fmt->fourcc;
diff --git a/drivers/staging/media/imx/imx8-mipi-csi2-sam.c b/drivers/staging/media/imx/imx8-mipi-csi2-sam.c
index 206d3fdd979e..06e9a5695e29 100644
--- a/drivers/staging/media/imx/imx8-mipi-csi2-sam.c
+++ b/drivers/staging/media/imx/imx8-mipi-csi2-sam.c
@@ -1152,12 +1152,20 @@ static int mipi_csis_set_fmt(struct v4l2_subdev *mipi_sd,
 		return -EINVAL;
 	}
 
-	csis_fmt = find_csis_format(mf->code);
-	if (!csis_fmt) {
-		csis_fmt = &mipi_csis_formats[0];
-		mf->code = csis_fmt->code;
-	}
-    state->csis_fmt = csis_fmt;
+    csis_fmt = find_csis_format(mf->code);
+    if (format->which == V4L2_SUBDEV_FORMAT_ACTIVE)
+    {
+        if (!csis_fmt)
+        {
+            csis_fmt = &mipi_csis_formats[0];
+            mf->code = csis_fmt->code;
+        }
+        state->csis_fmt = csis_fmt;
+    }
+    else if (!csis_fmt)
+    {
+        return -EINVAL;
+    }
 
 	state->csis_fmt = csis_fmt;
 
-- 
2.17.1

