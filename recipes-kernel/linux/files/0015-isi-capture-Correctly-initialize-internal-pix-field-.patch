From 1a9de1fe871b9b4063d8ac3d7dcc41a6f020f1e3 Mon Sep 17 00:00:00 2001
From: Dennis Langenkamp <dennis.langenkamp@alliedvision.com>
Date: Thu, 17 Nov 2022 10:41:12 +0100
Subject: [PATCH 15/23] isi capture: Correctly initialize internal pix field of
 struct mxc_isi_cap_dev.

---
 drivers/staging/media/imx/imx8-isi-cap.c | 35 +++++++++++++++++-------
 1 file changed, 25 insertions(+), 10 deletions(-)

diff --git a/drivers/staging/media/imx/imx8-isi-cap.c b/drivers/staging/media/imx/imx8-isi-cap.c
index 2d850f1135a5..ad6281cb7f1b 100644
--- a/drivers/staging/media/imx/imx8-isi-cap.c
+++ b/drivers/staging/media/imx/imx8-isi-cap.c
@@ -697,9 +697,6 @@ static int isi_cap_fmt_init(struct mxc_isi_cap_dev *isi_cap)
 	if (!dst_f->fmt)
     {
         dst_f->fmt = &mxc_isi_out_formats[0];
-        isi_cap->pix.num_planes = dst_f->fmt->memplanes;
-        isi_cap->pix.width = dst_f->width;
-        isi_cap->pix.height = dst_f->height;
 
         memset(&src_fmt, 0, sizeof(src_fmt));
         src_fmt.pad = source_pad->index;
@@ -712,14 +709,32 @@ static int isi_cap_fmt_init(struct mxc_isi_cap_dev *isi_cap)
             v4l2_err(&isi_cap->sd, "set remote fmt fail!\n");
             return ret;
         }
-    }
 
-	for (i = 0; i < dst_f->fmt->memplanes; i++) {
-		if (dst_f->bytesperline[i] == 0)
-			dst_f->bytesperline[i] = dst_f->width * dst_f->fmt->depth[i] >> 3;
-		if (dst_f->sizeimage[i] == 0)
-			dst_f->sizeimage[i] = dst_f->bytesperline[i] * dst_f->height;
-	}
+        for (i = 0; i < dst_f->fmt->memplanes; i++) {
+            if (dst_f->bytesperline[i] == 0)
+                dst_f->bytesperline[i] = dst_f->width * dst_f->fmt->depth[i] >> 3;
+            if (dst_f->sizeimage[i] == 0)
+                dst_f->sizeimage[i] = dst_f->bytesperline[i] * dst_f->height;
+        }
+
+        v4l2_fill_pix_format_mplane(&isi_cap->pix,&src_fmt.format);
+        isi_cap->pix.num_planes = dst_f->fmt->memplanes;
+        isi_cap->pix.pixelformat = dst_f->fmt->fourcc;
+
+        for (i = 0; i < isi_cap->pix.num_planes; i++) {
+            isi_cap->pix.plane_fmt[i].bytesperline = dst_f->bytesperline[i];
+            isi_cap->pix.plane_fmt[i].sizeimage = dst_f->sizeimage[i];
+        }
+    }
+    else
+    {
+        for (i = 0; i < dst_f->fmt->memplanes; i++) {
+            if (dst_f->bytesperline[i] == 0)
+                dst_f->bytesperline[i] = dst_f->width * dst_f->fmt->depth[i] >> 3;
+            if (dst_f->sizeimage[i] == 0)
+                dst_f->sizeimage[i] = dst_f->bytesperline[i] * dst_f->height;
+        }
+    }
 
 	if (!src_f->fmt)
 		memcpy(src_f, dst_f, sizeof(*dst_f));
-- 
2.17.1

